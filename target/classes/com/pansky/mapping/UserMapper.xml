<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pansky.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.pansky.vo.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="age" jdbcType="INTEGER" property="age" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, password, age
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_t
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findUserByPage" resultMap="BaseResultMap"> 
  		SELECT
			id,
			user_name,
			password,
			age
		FROM
		user_t
		where 1=1
		<if test="id != null">
			and id=#{id,jdbcType=INTEGER}
		</if>
		<if test="age != null">
			and age=#{age,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			and user_name like CONCAT('%', #{userName}, '%')
		</if>
		limit #{startPos},#{pageSize} 
	</select>
	<select id="findUserCount" resultType="java.lang.Integer"> 
  		SELECT count(*)
		FROM
		user_t where 1=1
		<if test="id != null">
			and id=#{id,jdbcType=INTEGER}
		</if>
		<if test="age != null">
			and age=#{age,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			and user_name like CONCAT('%', #{userName}, '%')
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_t
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteBatch" parameterType="int[]">
		delete from user_t
		where id in 
		<!-- forEach : 用来循环 collection : 
		用来指定循环的数据的类型 可以填的值有：array,list,map item 
		: 循环中为每个循环的数据指定一个别名 
		index : 循环中循环的下标 
		open : 开始 
		close : 结束 
		separator : 数组中元素之间的分隔符 -->
		<foreach collection="array" item="arr" index="no" open="("
			separator="," close=")">
			#{arr}
		</foreach>
	</delete>
	<insert id="insert" parameterType="com.pansky.vo.User">
		insert into user_t (id, user_name, password,
		age)
		values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.pansky.vo.User">
		insert into user_t
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="age != null">
				age,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.pansky.vo.User">
		update user_t
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pansky.vo.User">
		update user_t
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryForList" resultMap="BaseResultMap">
		SELECT
		u.id,
		u.user_name,
		u.password,
		u.age
		FROM
		user_t u
	</select>
</mapper>